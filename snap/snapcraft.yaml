name: microservicebus-node
version: '2.0.10'
summary: microServiceBus - IoT Device Management
description: |
  microServiceBus.com Â® enables businesses to combine the power of Enterprise Application Integration (EAI) with agility and reach of Internet of Things (IoT). https://microservicebus.com/
grade: stable
confinement: strict

plugs:
  dbus-plug:
    interface: dbus
    bus: system
    name: org.freedesktop.ModemManager1
  serial-port:
    interface: serial-port
  socket-plug:
    interface: content
    content: socket-directory
    target: $SNAP_COMMON/socket
  tpm:
    interface: tpm

apps:
  microservicebus-node:
    command: bin/startsnap
    daemon: simple
    restart-condition: always
    plugs:
    - account-control # chown access to e.g. node-gyp
    - alsa # sound devices
    - bluetooth-control # bluetooth
    - bluez # bluetooth
    - dbus-plug # ModemManager access
    - firewall-control # firewallw/iptables
    - gpio # GPIO access via /sys/class/gpio/*
    - gpio-memory-control # GPIO access via /dev/gpiomem
    - hardware-observe # access connected HW devices/peripherals
    - home # ability to store logs, etc. in user's home folder.
    - i2c # access to i2c sensors
    - iio # access to sensors via iio interface.
    - location-control # GPS/location access
    - log-observe # ability to retrieve syslogs, if requested by end-user.
    - modem-manager # access to modem info/control, like mmcli.
    - network # network client support
    - network-bind # network server support
    - network-manager # access to network configs, ability to toggle e.g. fallback connections, etc. 
    - network-observe # access to ping, arp tables, etc. for remote network troubleshooting
    - pulseaudio # UGLY work-around for access to syscall 'setgroups (116)'
    - raw-usb # custom usb device access
    - serial-port # access to /dev/tty{USB,ACM,AMA,etc}*
    - shutdown # reboot, shutdown
    - socket-plug # mSB-dam
#    - snapd-control # ability to refresh, revert, snaps via mSB
# To be added later when snapd management implemented in mSB.com.
    - spi # access to SPI bus
    - system-observe # disk-, memory-, process command line args, etc.
    - tpm # TPM module access
  init:
    command: bin/initsnap
    plugs:
    - home
    - dbus-plug
    - network
    - network-bind
    - modem-manager

environment:
  CC: $SNAP/usr/bin/gcc
  CPLUS_INCLUDE_PATH: $SNAP/usr/include:$SNAP/usr/include/x86_64-linux-gnu:$SNAP/usr/include/node
  C_INCLUDE_PATH: $SNAP/usr/include:$SNAP/usr/include/x86_64-linux-gnu:$SNAP/usr/include/node
  LD_LIBRARY_PATH: $SNAP/usr/lib/x86_64-linux-gnu
  PATH: $PATH:$SNAP/usr/bin
  PYTHON: $SNAP/usr/bin/python2.7
  NODE_PATH: $SNAP/lib/node_modules:$SNAP_USER_DATA/node_modules
  NPM_CONFIG_CACHE: $SNAP_USER_DATA/.npm
  GYP_CONFIG_DIR: $SNAP_USER_DATA/.gyp
  MSB_NODEPATH: $SNAP_USER_DATA/dummy
  MSB_USE_IMEI: "true"
  HOME: $SNAP_USER_DATA
  NPM_CONFIG_DEVDIR: $SNAP_USER_DATA/.gyp
  NPM_CONFIG_NODEDIR: $SNAP/usr/include/node

parts:
  node:
    source: ../
    npm-flags:
      - --production
    plugin: nodejs
    node-engine: '12.8.0'
    stage-packages:
    - python2.7
    - build-essential
    - libdb-dev
    - modemmanager
    - vim
    stage:
      - -usr/lib/x86_64-linux-gnu/libc.so
      - -usr/lib/x86_64-linux-gnu/libm.so
      - -usr/lib/x86_64-linux-gnu/libpthread.so
      - -usr/include/node/config.gypi
      - -include/node/config.gypi
    prime:
      - -lib/node_modules/microservicebus-node/node_modules/tar/lib/.mkdir.js.swp
  libhack:
    plugin: dump
    source: ./libhack

  node-headers:
    plugin: dump
    source: https://nodejs.org/dist/v12.8.0/node-v12.8.0-headers.tar.gz
    organize:
     include/: usr/include/

# To enable ICCID login:
# snap connect microservicebus-node:modem-manager modem-manager:service

# Other special purpose plugs:
# sudo snap connect microservicebus-node:kernel-module-control core:kernel-module-control
# sudo snap connect microservicebus-node:hardware-observe core:hardware-observe
# sudo snap connect microservicebus-node:serial-port caracalla:ttys4

# sudo snap connect microservicebus-daemon:kernel-module-control core:kernel-module-control
# sudo snap connect microservicebus-daemon:hardware-observe core:hardware-observe
# sudo snap connect microservicebus-daemon:serial-port caracalla:ttys4
